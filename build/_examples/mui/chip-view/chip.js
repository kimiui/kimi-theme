'use client';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Chip from '@mui/material/Chip';
import Stack from '@mui/material/Stack';
import Avatar from '@mui/material/Avatar';
import { _mock } from '../../../_mock';
import { Iconify } from '../../../components/iconify';
import { ComponentBlock } from '../../component-block';
export function Chips({ variant = 'filled' }) {
    const handleDelete = () => {
        console.info('You clicked the delete icon.');
    };
    return (_jsxs(Stack, { sx: {
            rowGap: 5,
            columnGap: 3,
            display: 'grid',
            gridTemplateColumns: { xs: 'repeat(1, 1fr)', md: 'repeat(2, 1fr)' },
        }, children: [_jsxs(ComponentBlock, { title: "Colors", sx: { gap: 1 }, children: [_jsx(Chip, { variant: variant, label: "Default deletable", avatar: _jsx(Avatar, { children: "M" }), onDelete: handleDelete }), _jsx(Chip, { variant: variant, clickable: true, label: "Default clickable", avatar: _jsx(Avatar, { children: "M" }) }), _jsx(Chip, { variant: variant, label: "Primary deletable", avatar: _jsx(Avatar, { alt: "Natacha", src: _mock.image.avatar(1) }), color: "primary", onDelete: handleDelete }), _jsx(Chip, { variant: variant, clickable: true, label: "Primary clickable", avatar: _jsx(Avatar, { alt: "Natacha", src: _mock.image.avatar(1) }), color: "primary" }), _jsx(Chip, { variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Secondary deletable", onDelete: handleDelete, color: "secondary" }), _jsx(Chip, { variant: variant, clickable: true, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Secondary clickable", color: "secondary" }), _jsx(Chip, { variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Info deletable", onDelete: handleDelete, color: "info" }), _jsx(Chip, { variant: variant, clickable: true, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Info clickable", color: "info" }), _jsx(Chip, { variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Success deletable", onDelete: handleDelete, color: "success" }), _jsx(Chip, { variant: variant, clickable: true, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Success clickable", color: "success" }), _jsx(Chip, { variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Warning deletable", onDelete: handleDelete, color: "warning" }), _jsx(Chip, { variant: variant, clickable: true, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Warning clickable", color: "warning" }), _jsx(Chip, { variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Error deletable", onDelete: handleDelete, color: "error" }), _jsx(Chip, { clickable: true, variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Error clickable", color: "error" })] }), _jsxs(Stack, { spacing: 5, children: [_jsxs(ComponentBlock, { title: "Custom icon", sx: { gap: 1 }, children: [_jsx(Chip, { variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Custom icon", onDelete: handleDelete, deleteIcon: _jsx(Iconify, { width: 24, icon: "eva:checkmark-fill" }) }), _jsx(Chip, { variant: variant, avatar: _jsx(Avatar, { children: "M" }), label: "Custom icon", onDelete: handleDelete, deleteIcon: _jsx(Iconify, { width: 24, icon: "eva:checkmark-fill" }), color: "info" })] }), _jsxs(ComponentBlock, { title: "Disabled", sx: { gap: 1 }, children: [_jsx(Chip, { disabled: true, variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Disabled", onDelete: handleDelete }), _jsx(Chip, { disabled: true, variant: variant, avatar: _jsx(Avatar, { children: "M" }), label: "Disabled", onDelete: handleDelete, color: "info" })] }), _jsxs(ComponentBlock, { title: "Sizes", sx: { gap: 1 }, children: [_jsx(Chip, { variant: variant, icon: _jsx(Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Normal", onDelete: handleDelete, color: "info" }), _jsx(Chip, { variant: variant, size: "small", avatar: _jsx(Avatar, { children: "M" }), label: "Small", onDelete: handleDelete, color: "info" })] })] })] }));
}
