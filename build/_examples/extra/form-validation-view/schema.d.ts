import { z as zod } from 'zod';
export type FormSchemaType = zod.infer<typeof FormSchema>;
export declare const FormSchema: zod.ZodEffects<zod.ZodEffects<zod.ZodObject<{
    fullName: zod.ZodString;
    email: zod.ZodString;
    phoneNumber: zod.ZodEffects<zod.ZodString, string, string>;
    editor: zod.ZodString;
    age: zod.ZodNumber;
    startDate: zod.ZodPipeline<zod.ZodEffects<zod.ZodNullable<zod.ZodDate>, string | null, Date | null>, zod.ZodUnion<[zod.ZodNumber, zod.ZodString, zod.ZodDate, zod.ZodNull]>>;
    endDate: zod.ZodPipeline<zod.ZodEffects<zod.ZodNullable<zod.ZodDate>, string | null, Date | null>, zod.ZodUnion<[zod.ZodNumber, zod.ZodString, zod.ZodDate, zod.ZodNull]>>;
    password: zod.ZodString;
    confirmPassword: zod.ZodString;
    autocomplete: zod.ZodEffects<zod.ZodEffects<zod.ZodType<{
        value: string;
        label: string;
    } | null, zod.ZodTypeDef, {
        value: string;
        label: string;
    } | null>, {
        value: string;
        label: string;
    }, {
        value: string;
        label: string;
    } | null>, {
        value: string;
        label: string;
    }, {
        value: string;
        label: string;
    } | null>;
    singleCountry: zod.ZodEffects<zod.ZodEffects<zod.ZodType<any, zod.ZodTypeDef, any>, any, any>, any, any>;
    multiCountry: zod.ZodArray<zod.ZodString, "many">;
    singleSelect: zod.ZodString;
    multiSelect: zod.ZodArray<zod.ZodString, "many">;
    rating: zod.ZodNumber;
    radioGroup: zod.ZodString;
    checkbox: zod.ZodEffects<zod.ZodBoolean, boolean, boolean>;
    switch: zod.ZodEffects<zod.ZodBoolean, boolean, boolean>;
    multiCheckbox: zod.ZodArray<zod.ZodString, "atleastone">;
    multiSwitch: zod.ZodArray<zod.ZodString, "atleastone">;
    slider: zod.ZodNumber;
    sliderRange: zod.ZodEffects<zod.ZodArray<zod.ZodNumber, "many">, number[], number[]>;
    singleUpload: zod.ZodEffects<zod.ZodType<string | File | null, zod.ZodTypeDef, string | File | null>, string | File | null, string | File | null>;
    multiUpload: zod.ZodEffects<zod.ZodArray<zod.ZodType<string | File, zod.ZodTypeDef, string | File>, "many">, (string | File)[], (string | File)[]>;
}, "strip", zod.ZodTypeAny, {
    switch: boolean;
    checkbox: boolean;
    radioGroup: string;
    slider: number;
    email: string;
    password: string;
    multiSelect: string[];
    editor: string;
    startDate: string | number | Date | null;
    endDate: string | number | Date | null;
    fullName: string;
    phoneNumber: string;
    age: number;
    confirmPassword: string;
    autocomplete: {
        value: string;
        label: string;
    };
    multiCountry: string[];
    singleSelect: string;
    rating: number;
    multiCheckbox: [string, ...string[]];
    multiSwitch: [string, ...string[]];
    sliderRange: number[];
    singleUpload: string | File | null;
    multiUpload: (string | File)[];
    singleCountry?: any;
}, {
    switch: boolean;
    checkbox: boolean;
    radioGroup: string;
    slider: number;
    email: string;
    password: string;
    multiSelect: string[];
    editor: string;
    startDate: Date | null;
    endDate: Date | null;
    fullName: string;
    phoneNumber: string;
    age: number;
    confirmPassword: string;
    autocomplete: {
        value: string;
        label: string;
    } | null;
    multiCountry: string[];
    singleSelect: string;
    rating: number;
    multiCheckbox: [string, ...string[]];
    multiSwitch: [string, ...string[]];
    sliderRange: number[];
    singleUpload: string | File | null;
    multiUpload: (string | File)[];
    singleCountry?: any;
}>, {
    switch: boolean;
    checkbox: boolean;
    radioGroup: string;
    slider: number;
    email: string;
    password: string;
    multiSelect: string[];
    editor: string;
    startDate: string | number | Date | null;
    endDate: string | number | Date | null;
    fullName: string;
    phoneNumber: string;
    age: number;
    confirmPassword: string;
    autocomplete: {
        value: string;
        label: string;
    };
    multiCountry: string[];
    singleSelect: string;
    rating: number;
    multiCheckbox: [string, ...string[]];
    multiSwitch: [string, ...string[]];
    sliderRange: number[];
    singleUpload: string | File | null;
    multiUpload: (string | File)[];
    singleCountry?: any;
}, {
    switch: boolean;
    checkbox: boolean;
    radioGroup: string;
    slider: number;
    email: string;
    password: string;
    multiSelect: string[];
    editor: string;
    startDate: Date | null;
    endDate: Date | null;
    fullName: string;
    phoneNumber: string;
    age: number;
    confirmPassword: string;
    autocomplete: {
        value: string;
        label: string;
    } | null;
    multiCountry: string[];
    singleSelect: string;
    rating: number;
    multiCheckbox: [string, ...string[]];
    multiSwitch: [string, ...string[]];
    sliderRange: number[];
    singleUpload: string | File | null;
    multiUpload: (string | File)[];
    singleCountry?: any;
}>, {
    switch: boolean;
    checkbox: boolean;
    radioGroup: string;
    slider: number;
    email: string;
    password: string;
    multiSelect: string[];
    editor: string;
    startDate: string | number | Date | null;
    endDate: string | number | Date | null;
    fullName: string;
    phoneNumber: string;
    age: number;
    confirmPassword: string;
    autocomplete: {
        value: string;
        label: string;
    };
    multiCountry: string[];
    singleSelect: string;
    rating: number;
    multiCheckbox: [string, ...string[]];
    multiSwitch: [string, ...string[]];
    sliderRange: number[];
    singleUpload: string | File | null;
    multiUpload: (string | File)[];
    singleCountry?: any;
}, {
    switch: boolean;
    checkbox: boolean;
    radioGroup: string;
    slider: number;
    email: string;
    password: string;
    multiSelect: string[];
    editor: string;
    startDate: Date | null;
    endDate: Date | null;
    fullName: string;
    phoneNumber: string;
    age: number;
    confirmPassword: string;
    autocomplete: {
        value: string;
        label: string;
    } | null;
    multiCountry: string[];
    singleSelect: string;
    rating: number;
    multiCheckbox: [string, ...string[]];
    multiSwitch: [string, ...string[]];
    sliderRange: number[];
    singleUpload: string | File | null;
    multiUpload: (string | File)[];
    singleCountry?: any;
}>;
