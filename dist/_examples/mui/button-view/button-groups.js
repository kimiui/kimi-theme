import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import ButtonGroup from '@mui/material/ButtonGroup';
import { ComponentBlock } from '../../component-block';
// ----------------------------------------------------------------------
const COLORS = ['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning'];
const SIZES = ['small', 'medium', 'large'];
const VARIANTS = ['contained', 'outlined', 'text', 'soft'];
// ----------------------------------------------------------------------
export function ButtonGroups() {
    return (_jsxs(Stack, { gap: 2.5, display: "grid", gridTemplateColumns: { xs: 'repeat(1, 1fr)', lg: 'repeat(2, 1fr)' }, children: [_jsxs(ComponentBlock, { title: "Contained", children: [COLORS.map((color) => (_jsxs(ButtonGroup, { variant: "contained", color: color, children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] }, color))), _jsxs(ButtonGroup, { disabled: true, variant: "contained", color: "info", children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] })] }), _jsxs(ComponentBlock, { title: "Outlined", children: [COLORS.map((color) => (_jsxs(ButtonGroup, { variant: "outlined", color: color, children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] }, color))), _jsxs(ButtonGroup, { disabled: true, variant: "outlined", color: "info", children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] })] }), _jsxs(ComponentBlock, { title: "Text", children: [COLORS.map((color) => (_jsxs(ButtonGroup, { variant: "text", color: color, children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] }, color))), _jsxs(ButtonGroup, { disabled: true, variant: "text", color: "info", children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] })] }), _jsxs(ComponentBlock, { title: "Soft", children: [COLORS.map((color) => (_jsxs(ButtonGroup, { variant: "soft", color: color, children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] }, color))), _jsxs(ButtonGroup, { disabled: true, variant: "soft", color: "info", children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] })] }), _jsx(ComponentBlock, { title: "Sizes", children: SIZES.map((size) => (_jsxs(ButtonGroup, { size: size, variant: "contained", children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] }, size))) }), _jsxs(ComponentBlock, { title: "Orientation", children: [VARIANTS.map((variant) => (_jsxs(ButtonGroup, { variant: variant, orientation: "vertical", children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] }, variant))), _jsxs(ButtonGroup, { disabled: true, variant: "soft", color: "info", orientation: "vertical", children: [_jsx(Button, { children: "One" }), _jsx(Button, { children: "Two" }), _jsx(Button, { children: "Three" })] })] })] }));
}
