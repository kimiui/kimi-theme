'use client';
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Chips = Chips;
var jsx_runtime_1 = require("react/jsx-runtime");
var Chip_1 = __importDefault(require("@mui/material/Chip"));
var Stack_1 = __importDefault(require("@mui/material/Stack"));
var Avatar_1 = __importDefault(require("@mui/material/Avatar"));
var _mock_1 = require("lib/_mock");
var iconify_1 = require("lib/components/iconify");
var component_block_1 = require("../../component-block");
function Chips(_a) {
    var _b = _a.variant, variant = _b === void 0 ? 'filled' : _b;
    var handleDelete = function () {
        console.info('You clicked the delete icon.');
    };
    return ((0, jsx_runtime_1.jsxs)(Stack_1.default, { sx: {
            rowGap: 5,
            columnGap: 3,
            display: 'grid',
            gridTemplateColumns: { xs: 'repeat(1, 1fr)', md: 'repeat(2, 1fr)' },
        }, children: [(0, jsx_runtime_1.jsxs)(component_block_1.ComponentBlock, { title: "Colors", sx: { gap: 1 }, children: [(0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, label: "Default deletable", avatar: (0, jsx_runtime_1.jsx)(Avatar_1.default, { children: "M" }), onDelete: handleDelete }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, clickable: true, label: "Default clickable", avatar: (0, jsx_runtime_1.jsx)(Avatar_1.default, { children: "M" }) }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, label: "Primary deletable", avatar: (0, jsx_runtime_1.jsx)(Avatar_1.default, { alt: "Natacha", src: _mock_1._mock.image.avatar(1) }), color: "primary", onDelete: handleDelete }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, clickable: true, label: "Primary clickable", avatar: (0, jsx_runtime_1.jsx)(Avatar_1.default, { alt: "Natacha", src: _mock_1._mock.image.avatar(1) }), color: "primary" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Secondary deletable", onDelete: handleDelete, color: "secondary" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, clickable: true, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Secondary clickable", color: "secondary" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Info deletable", onDelete: handleDelete, color: "info" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, clickable: true, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Info clickable", color: "info" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Success deletable", onDelete: handleDelete, color: "success" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, clickable: true, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Success clickable", color: "success" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Warning deletable", onDelete: handleDelete, color: "warning" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, clickable: true, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Warning clickable", color: "warning" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Error deletable", onDelete: handleDelete, color: "error" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { clickable: true, variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Error clickable", color: "error" })] }), (0, jsx_runtime_1.jsxs)(Stack_1.default, { spacing: 5, children: [(0, jsx_runtime_1.jsxs)(component_block_1.ComponentBlock, { title: "Custom icon", sx: { gap: 1 }, children: [(0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Custom icon", onDelete: handleDelete, deleteIcon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:checkmark-fill" }) }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, avatar: (0, jsx_runtime_1.jsx)(Avatar_1.default, { children: "M" }), label: "Custom icon", onDelete: handleDelete, deleteIcon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:checkmark-fill" }), color: "info" })] }), (0, jsx_runtime_1.jsxs)(component_block_1.ComponentBlock, { title: "Disabled", sx: { gap: 1 }, children: [(0, jsx_runtime_1.jsx)(Chip_1.default, { disabled: true, variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Disabled", onDelete: handleDelete }), (0, jsx_runtime_1.jsx)(Chip_1.default, { disabled: true, variant: variant, avatar: (0, jsx_runtime_1.jsx)(Avatar_1.default, { children: "M" }), label: "Disabled", onDelete: handleDelete, color: "info" })] }), (0, jsx_runtime_1.jsxs)(component_block_1.ComponentBlock, { title: "Sizes", sx: { gap: 1 }, children: [(0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, icon: (0, jsx_runtime_1.jsx)(iconify_1.Iconify, { width: 24, icon: "eva:smiling-face-fill" }), label: "Normal", onDelete: handleDelete, color: "info" }), (0, jsx_runtime_1.jsx)(Chip_1.default, { variant: variant, size: "small", avatar: (0, jsx_runtime_1.jsx)(Avatar_1.default, { children: "M" }), label: "Small", onDelete: handleDelete, color: "info" })] })] })] }));
}
